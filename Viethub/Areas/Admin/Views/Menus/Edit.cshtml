@model Viethub.Models.Menu

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<!-- Begin Page Content -->
<div class="container-fluid">
    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Quản lý thanh Menu</h1>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Cập nhật thanh menu</h6>
        </div>
        <div class="card-body">
            <div class="panel-body">
                @using (Html.BeginForm("Edit", "Menus", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.id)
                        <div class="row">
                            <div class=" col-md-8">
                                <div class="form-group">
                                    @Html.Label("Tiêu đề", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Đường dẫn", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class=" col-md-4">
                                <div class="form-group">
                                    @Html.Label("Ẩn", htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-10">
                                        @{
                                            bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
                                        }
                                        @Html.CheckBoxFor(model => hide)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Vị trí", htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>
                        
                        
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-danger" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div>
                @Html.ActionLink("Trở về danh sách Menu", "Index")
            </div>
        </div>
    </div>

</div>
<!-- /.container-fluid -->

@section _Footer
{
    <script src="~/Areas/Admin/AdminContent/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/AdminContent/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("Detail");
        var editor = CKEDITOR.replace("Detail", { height: '800px' });
        customConfig: '/Areas/Admin/AdminContent/ckeditor/config.js';
    </script>
    <script>
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>
}